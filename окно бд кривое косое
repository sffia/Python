import tkinter as tk
import tkinter.messagebox as mb
from tkinter import scrolledtext

import psycopg2


def clicked():
    username = username_entry.get()
    password = password_entry.get()
    host = host_entry.get()
    port = port_entry.get()
    db_name = db_name_entry.get()

    def sql_clicked():
        sql = sql_entry.get()
        print(sql)
        frame_list = tk.Frame(new_window, bg='#fff')

        if 'select' in sql:

            result_label = tk.Label(new_window, text='Вывод: ', font=label_font, **base_padding)
            result_label.pack()
            cur.execute(sql)
            ttt = cur.fetchall()
            result = scrolledtext.ScrolledText(new_window, width=80, height=80, bg="#fff", fg='#444')
            result.insert('1.0', ttt)
            result.pack()

            con.commit()
        elif 'delete' in sql:
            cur.execute(sql)
            result = tk.Label(new_window, text='Удалено!', font=('Arial', 13), **base_padding)
            result.pack()
            con.commit()
        elif 'insert' in sql:
            cur.execute(sql)
            result = tk.Label(new_window, text='Добавлено!', font=('Arial', 13), **base_padding)
            result.pack()
            con.commit()
        elif 'create' in sql:
            cur.execute(sql)
            result = tk.Label(new_window, text='Создано!', font=('Arial', 13), **base_padding)
            result.pack()
            con.commit()
        else:
            result = tk.Label(new_window, text='Нет прав или неверно введен запрос!', font=('Arial', 13),
                              **base_padding)
            result.pack()
            con.commit()

    try:
        window.withdraw()
        new_window = tk.Tk()
        new_window.wm_attributes("-topmost", 1)
        new_window.title('Парсер vz.ru')
        new_window.geometry('450x450')
        new_main_label = tk.Label(new_window, text='Введите SQL запрос', font=('Arial', 13), **header_padding)
        new_main_label.pack()
        con = psycopg2.connect(
            database=db_name,
            user=username,
            password=password,
            host=host,
            port=port
        )

        cur = con.cursor()

        sql_entry = tk.Entry(new_window, width=40, bg='#fff', fg='#444', font=font_entry)
        sql_entry.pack()
        con.commit()
        sql_btn = tk.Button(new_window, text='Выполнить', command=sql_clicked)
        sql_btn.pack(**base_padding)

        # new_window.protocol("WM_DELETE_WINDOW", window.destroy())
    except(psycopg2.OperationalError, psycopg2.errors.InsufficientPrivilege) as e:
        new_window.destroy()
        mb.showerror(title='Ошибка', message='Проверьте корректность введенных данных!')


window = tk.Tk()
window.title('Парсер vz.ru')
window.geometry('450x450')
window.resizable(False, False)

# кортежи и словари, содержащие настройки шрифтов и отступов
font_header = ('Arial', 15)
font_entry = ('Arial', 12)
label_font = ('Arial', 11)
base_padding = {'padx': 10, 'pady': 8}
header_padding = {'padx': 10, 'pady': 12}

main_label = tk.Label(window, text='Введите данные, чтобы начать работу', font=font_header, **header_padding)
main_label.pack()

# метка для поля ввода имени
username_label = tk.Label(window, text='Имя пользователя: ', font=label_font, **base_padding)
username_label.pack()
# поле ввода имени
username_entry = tk.Entry(window, bg='#fff', fg='#444', font=font_entry)
username_entry.pack()

# метка для поля ввода пароля
password_label = tk.Label(window, text='Пароль: ', font=label_font, **base_padding)
password_label.pack()
# поле ввода пароля
password_entry = tk.Entry(window, show='*', bg='#fff', fg='#444', font=font_entry)
password_entry.pack()

# метка для поля ввода host
host_label = tk.Label(window, text='Host: ', font=label_font, **base_padding)
host_label.pack()
# поле ввода host
host_entry = tk.Entry(window, bg='#fff', fg='#444', font=font_entry)
host_entry.pack()

# метка для поля ввода port
port_label = tk.Label(window, text='Порт: ', font=label_font, **base_padding)
port_label.pack()
# поле ввода port
port_entry = tk.Entry(window, bg='#fff', fg='#444', font=font_entry)
port_entry.pack()

# метка для поля ввода названия БД
db_name_label = tk.Label(window, text='Имя БД: ', font=label_font, **base_padding)
db_name_label.pack()
# поле ввода названия БД
db_name_entry = tk.Entry(window, bg='#fff', fg='#444', font=font_entry)
db_name_entry.pack()

# кнопка отправки формы
send_btn = tk.Button(window, text='Войти', command=clicked)
send_btn.pack(**base_padding)
window.mainloop()

# window.protocol("WM_DELETE_WINDOW", on_closing)
